一、scrapy selenium 处理js动态页面

1、安装
  pip install selenium
  下载浏览器驱动 chromedriver    

2、使用
  form selenium import webdriver
  browser = webdriver.Chrome(execute_path=“path tp chromedriver”)
  browser.get(url)
  browser.quit()

  #selenium 完成微博模拟登录
  # browser.get("https://www.oschina.net/blog")
  # import time
  # time.sleep(5)
  # browser.find_element_by_css_selector("#loginname").send_keys("liyao198705@sina.com")
  # browser.find_element_by_css_selector(".info_list.password input[node-type='password']").send_keys("da_ge_da")
  # browser.find_element_by_css_selector(".info_list.login_btn a[node-type='submitBtn']").click()

  #设置chromedriver不加载图片
  # chrome_opt = webdriver.ChromeOptions()
  # prefs = {"profile.managed_default_content_settings.images":2}
  # chrome_opt.add_experimental_option("prefs", prefs)

3、集成到scrapy
  在middleware里加一个类。 重写process_request方法，记住将ch
  from scrapy.http import HtmlResponse
  class SeleniumMiddleware(object):

    # 通过chrome请求动态网页
    def process_request(self, request, spider):
        if spider.name == "jobbole":
            spider.browser.get(request.url)  #这里请求是同步的，需要请求完，才能进行下一步！！！
            # import time
            # time.sleep(3)  #为什么要sleep
            print ("访问:{0}".format(request.url))
            return HtmlResponse(url=spider.browser.current_url, body=spider.browser.page_source, encoding="utf-8", request=request)

4、不足：还是太慢了。









