服务架构

由于可能的服务有很多，所以应该考虑搞一个服务基类，不同服务分别继承即可。

base_server.py

服务基类的设计思想：
1、有初始化服务（确定ip和端口）。
2、启动服务（建立网络连接，监听请求）。
3、开启两个线程，主线程——定时更新操作 （扩展出来，作为服务端处理主逻辑，不同服务不同的处理逻辑）异步服务
              子线程——网络通信  （与客户端进行网络通信，接受客户端的连接） 同步服务
4、处理客户端网络通信接口（扩展出来，不同服务，不同的处理逻辑）


思维导图：
                       查询任务           插入任务            提交任务
处理任务<————python服务 ————————> mysql <————————— php后台 <—————————— web浏览器
            |                                      |   
            |         网络通信查询打包状态             |
            |<————————————————————————————————————>|  

为什么要这么做？
为什么用异步？
使用异步框架场景：对相应速度要求比较高请求，但是该请求的相关业务操作允许一定的延迟。
而我们的打包服务刚好是这种情况，提交打包任务是高请求，但真正打包过程，可以有延迟再执行。
但是随时查询打包状态等即时网络通讯，则是使用同步的请求。

